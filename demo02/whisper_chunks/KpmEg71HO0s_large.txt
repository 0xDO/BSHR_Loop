{"text": " So if you know your prompt can only fit 8,000 tokens in, then you can recursively summarize it. So every time you have a conversation, it summarizes it to make sure it fits in those 8,000 tokens. Eventually, of course, you're going to compress the information and lose the detail. And the analogy he makes is that's kind of what our brains do anyway. Like if you remember, if you were asked what you did yesterday, you know what you had for breakfast you you know You don't really know you just know you had breakfast then, you know, you did your teeth or whatever But you all the details kind of unless there's something yeah, you might say, you know one word which could be eggs or Something like that But really that was like a five to ten minute chunk of your life and a lot of a stuff happened in that time. Exactly, yeah. So, I think that's an interesting concept that folds into it. Long-term chat with external sources. So, I don't know exactly, but these are sort of related to some of the YouTube videos he's done. A lot of the work he's done, it's just saving the files out to like a JSON file locally or something like that. So you can see that I noticed that. So he's not even there was if you scroll down in his repo a little bit. The YouTube chapter generator. I literally wrote one last night. So, and so I've looked I've compared my method to his method, and it's a bit different, but it sort of achieves the same goal. Yeah, it's kind of fun looking around in people's code bases. So anyone that's getting into development, I think it's a really great way to start out. Also, because, you know, particularly with Python, the code is so readable, you know, you can dive really right into it. And so, like, for example, if we are even not sure about what something is doing, we can dive in here to the... is there some code in here? There is no code in here. Let's see what is done here. I think these are all placeholder files. Do we have another branch here? Yeah, let's have a look at this branch. OK, so it seems like I'm not exactly sure where the, here we go, we have some code here. So if we're not sure what exactly this is doing, we can always just grab this for non-technical guys out there, and we can just say, can you explain what this is doing at a ever year old level? This code is creating a program that receives requests from other programs over the internet. The program is built using a package called fastAPI, which helps it connect to incoming requests. The code is also using uvunicorn, which helps it to reprogram and listen to incoming requests, blah blah blah. So you can pause that and read that if you want, but this will give you a good understanding in text format of what it's doing, if you are not sure. if you are not sure. So, yeah. So, I think the interesting thing about this microservices is kind of got an inner loop, which I think is the one that's handling the information as it's coming in, an outer loop, which works on a slightly longer timeline, and then a dream sequence, which happens offline. I think this is like, can be modeled like you've got an inner dialogue in your mind, and you've got your outer loop, which is how you're interacting with the environment, and then you've got like a dream sequence, which sort of compresses memories and does stuff to them. And so that I think is the architecture. I'm probably bastardizing this, I'm sorry. I'm probably bastardizing this.", "chunks": [{"timestamp": [0.0, 6.3], "text": " So if you know your prompt can only fit 8,000 tokens in,"}, {"timestamp": [6.3, 8.0], "text": " then you can recursively summarize it."}, {"timestamp": [8.0, 12.0], "text": " So every time you have a conversation,"}, {"timestamp": [12.0, 16.0], "text": " it summarizes it to make sure it fits in those 8,000 tokens."}, {"timestamp": [16.0, 17.42], "text": " Eventually, of course, you're going"}, {"timestamp": [17.42, 20.76], "text": " to compress the information and lose the detail."}, {"timestamp": [20.76, 22.32], "text": " And the analogy he makes is that's"}, {"timestamp": [22.32, 23.72], "text": " kind of what our brains do anyway."}, {"timestamp": [23.72, 29.7], "text": " Like if you remember, if you were asked what you did yesterday, you know what you had for breakfast you you know"}, {"timestamp": [29.7, 33.8], "text": " You don't really know you just know you had breakfast then, you know, you did your teeth or whatever"}, {"timestamp": [33.8, 39.12], "text": " But you all the details kind of unless there's something yeah, you might say, you know one word which could be eggs or"}, {"timestamp": [39.8, 40.6], "text": " Something like that"}, {"timestamp": [40.6, 49.12], "text": " But really that was like a five to ten minute chunk of your life and a lot of a stuff happened in that time. Exactly, yeah. So, I think that's an interesting concept that"}, {"timestamp": [49.92, 55.84], "text": " folds into it. Long-term chat with external sources. So, I don't know exactly,"}, {"timestamp": [55.84, 59.12], "text": " but these are sort of related to some of the YouTube videos he's done."}, {"timestamp": [64.08, 72.0], "text": " A lot of the work he's done, it's just saving the files out to like a JSON file locally or something like that. So you can see that I noticed that."}, {"timestamp": [72.0, 78.0], "text": " So he's not even there was if you scroll down in his repo a little bit."}, {"timestamp": [78.0, 85.36], "text": " The YouTube chapter generator. I literally wrote one last night. So, and so I've looked I've compared my method to his method,"}, {"timestamp": [85.36, 91.76], "text": " and it's a bit different, but it sort of achieves the same goal. Yeah, it's kind of fun"}, {"timestamp": [91.76, 97.68], "text": " looking around in people's code bases. So anyone that's getting into development, I think it's a"}, {"timestamp": [97.68, 105.6], "text": " really great way to start out. Also, because, you know, particularly with Python, the code is so readable,"}, {"timestamp": [110.4, 116.48], "text": " you know, you can dive really right into it. And so, like, for example, if we are even not sure about what something is doing, we can dive in here to the... is there some code in here? There is no"}, {"timestamp": [116.48, 126.38], "text": " code in here. Let's see what is done here. I think these are all placeholder files. Do we have another branch here? Yeah, let's have a look at this branch."}, {"timestamp": [129.8, 135.4], "text": " OK, so it seems like I'm not exactly sure where the, here"}, {"timestamp": [135.4, 138.32], "text": " we go, we have some code here."}, {"timestamp": [138.32, 141.04], "text": " So if we're not sure what exactly this is doing,"}, {"timestamp": [141.04, 146.32], "text": " we can always just grab this for non-technical guys out there, and we can just say,"}, {"timestamp": [146.88, 158.08], "text": " can you explain what this is doing at a ever year old level?"}, {"timestamp": [161.6, 165.6], "text": " This code is creating a program that receives requests from other programs over the internet."}, {"timestamp": [165.6, 170.56], "text": " The program is built using a package called fastAPI, which helps it connect to incoming requests."}, {"timestamp": [170.56, 174.48], "text": " The code is also using uvunicorn, which helps it to reprogram and listen to incoming requests, blah blah blah."}, {"timestamp": [174.48, 178.08], "text": " So you can pause that and read that if you want, but this will give you a good understanding in"}, {"timestamp": [178.08, 181.12], "text": " text format of what it's doing, if you are not sure."}, {"timestamp": [188.8, 190.56], "text": " if you are not sure. So, yeah. So, I think the interesting thing about this microservices is"}, {"timestamp": [195.12, 200.08], "text": " kind of got an inner loop, which I think is the one that's handling the information as it's coming in, an outer loop, which works on a slightly longer timeline, and then a dream sequence,"}, {"timestamp": [200.08, 206.48], "text": " which happens offline. I think this is like, can be modeled like you've got an inner dialogue"}, {"timestamp": [207.44, 211.84], "text": " in your mind, and you've got your outer loop, which is how you're interacting with the environment,"}, {"timestamp": [211.84, 216.32], "text": " and then you've got like a dream sequence, which sort of compresses memories and does stuff to"}, {"timestamp": [216.32, 221.6], "text": " them. And so that I think is the architecture. I'm probably bastardizing this, I'm sorry."}, {"timestamp": [216.72, 218.72], "text": " I'm probably bastardizing this."}]}