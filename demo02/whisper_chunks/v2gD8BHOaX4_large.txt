{"text": " Hey everybody, David Shapiro here with another tutorial video. So I know we've started with Python, and I'll show you something in a minute, but one thing that has come to my attention is that what we really need is some basics with prompt engineering. So if you're new to GPT-3 and large language models, the first thing that you need to know is that these are fundamentally just autocomplete engines. So you know how like you have your phone and it will have like the recommended next word. It's not much different than that. It's just, this is infinitely more sophisticated. The model, I think, I always get this number wrong, but it takes about 700 gigabytes of RAM to run, whereas your keyboard takes, you know, a few megabytes. So this is like several thousand times larger of an autocomplete engine, but at the end of the day, it's just an autocomplete engine. So let me show you what I mean. This is the original DaVinci model, which is also one of the harder ones to use because it has no fine-tuning in order to make it more instruction friendly. And so in this case, you usually have to do... you either have to allow it to autocomplete what you've done, or you have to give it a few examples, which is called few-shot prompting. So we're going to start with the old stuff, because if you build up an intuition for understanding that it's an autocomplete engine, and that's it, you'll understand how to use these models a lot better. So we say BBC News China has tested their latest fusion reactor and then we just say go and see what it does. Oh interesting. So the last time I ran this, I did something else. It looks like in this case, it's listing a bunch of different news articles. So this if you go to like news.google.com, this is kind of what it looks like right where it's got you know the the source and then and then a title that's not what i expected it to do so let's run it again because this is just one way that it could auto complete it let's run it again and see what happens ah see now it's actually writing an article so you see how it seems at first bluff it might be completely random but what it's doing is it's matching a pattern. Let's see, so China has tested their latest fusion reactor and it seems to be successful this will be a huge step for the country in the world you know etc etc and it gives me a YouTube link let's see it let's see if this is actually a video. Nope, not available. Okay so anyways it's an autocomplete engine so this is what's called zero shot. So zero shot is when you don't give it any examples, you just want it to complete something. So this was for a news article. Now, if I give it instructions, like write a short story about an astronaut going to Mars, this is probably not gonna work. See it's just it doesn't understand what I'm asking and it's just repeating it. Let's do it again. Yeah. so it's like giving instructions. It's like no. I actually wanted to write something like can you write the story for me. But if we reframe it like well, let's call it a. Jordan's mission to Mars a short story by let's say Jimmy Hendrix. I don't know. There once was an astronaut named Jordan and then let's see what happens. There we go. So by giving it just a little bit to start off with, it kind of went... yeah, this looks like it was written by a little kid. There was once an astronaut named Jordan. Jordan was a brave astronaut who was the first astronaut on Mars. He was the first astronaut to ever walk on Mars. Jordan was walking along the surface of Mars. He was walking on a sandy desert. The planet looked so red. Yeah, this was like written by a little kid. So that's the best it could do to match that pattern. Now let's run it again and see what happens. But you can see that it's just... Oh, this looks like a little more sophisticated. But anyways, so by queuing it up, the end by Kayla Grady, and it's a short story by Jimi Hendrix, so it forgot what it was talking about anyways. Alright, so this is zero shot, where you basically, you spool it up by giving it something, and then you just let it run like an autocomplete engine. And so in that respect, it's just a statistical model. But what if you have a very specific pattern that you want it to follow? So you might say like, brainstorm, let's see, a list of ideas to, let's see, a list of ideas of ways to survive on Mars. So this is something that it's probably seen in its training data, like on Reddit or Stack Exchange or whatever and so then if we do this. What would you need to bring so it's not it's just asking questions. It's not actually answering them. so that's no good right. Let's do it again and see if we can get it to oh there we go. Okay. Oh look and so then it starts it goes off Matt Damon. Yeah. So then it completely changes topic and it's like, well, that's not what I wanted. I wanted this list, right? Gather water from the water crystals, okay? Get oxygen from the oxygen crystals. This is so random. Find a way to grow food. Find a way to build a radio so that, okay. So you can see where it was just like, okay, it just kind of goes off the rails and runs with it. This was original DaVinci. So how do you get it to do what you want? Well, so what you can do then is one shot, so what I've shown you up to this point is zero shot, where it's just like, let me just give you an initial prompt and treat you like an autocomplete engine, just like you hit the next thing on your keyboard and let it go and see what happens. Now, what you can do then is what's called a one-shot prompt. So a one-shot prompt is where you give it one example of what you want, and then you set it free. So then I give it an example, brainstorm a list of ideas of how to survive on Mars. So now let's brainstorm a list of ideas of how to survive on Mars. So now let's brainstorm a list of ideas of ways to survive on a deserted island. Okay. So in this case, it's called one shot because I give it one example of what I need and then because it's basically a pattern matching thing, it can keep going. So find food, find water, find find shelter find a way to communicate with the outside world. It basically gave me the same kind of of information here brainstorm list of ideas to serve on a deserted island and it repeated it. So you see these repetitions happening. How do you get that to stop here? You can do backslash and backslash in so that's new line new line. So what will happen is if it gives you a double new line, it'll stop. Whoops. Gather food and water, find shelter. Oh, wait, it didn't stop. Why didn't it stop? I wonder if it's slash rn, slash rn. So there's several ways that it can do new lines. So slash r is carriage return, and slash n is new line. Let's see if that works. Nope, still not stopping. What the actual heck? That's really weird. Because the stop sequence should, unless it might be treating this like text. Let me do view code. Oh, yeah, so see what it did is it escaped my backslashes. So while we're here, let me show you something super useful. If you're trying to get, if you get a result that you like in here, with all the settings and stuff, you just click view code and it'll pop up and show you like, oh, look, here's what you did. And so the stop sequence right here where you see it says backslash, backslash, N and backslash, backslash, N, that means it's escaping it. So it's removing it as a regex. So it's not evaluating it like regex. I wanted to evaluate it like regex, but I'm not gonna do that. So unfortunately that's not gonna work. Brainstorm a list of ideas for a haunted house. Now that's not going to work. Brainstorm a list of ideas for a haunted house. Now, that's great. Okay, so, if we stick with this, we say, alright, so we're brainstorming. So, then if we do Fushot, where we give it a couple different examples. So, let's go ahead and let it finish this. Okay. So, then we say, alright, let's take out survive and we're just saying this is brainstorming and you notice how it's doing four items for each. It's copying. It's copying the pattern exactly. So now we're gonna give it two examples where it's it's brainstorming entirely different things. Brainstorm a list of ideas of ways to survive on Mars. Brainstorm a list of ideas of ways to survive on Mars. Brainstorm a list of ideas for a haunted house. Let's see brainstorm a list of ideas to solve climate change so completely different domains. But I shouldn't even need to put in the the one because it will it will have seen this pattern. So remember it's auto complete. It's an auto complete engine, but it's also a pattern matching and pattern generation engine. So that's how autocomplete works. It says, oh, I've seen this pattern before. Like, if you start it with a BBC News article, it says, I've seen plenty of BBC articles. Why? Because GPT-3 was chained on, you know, hundreds of gigabytes of internet data. Okay. Plant trees, change the way. Yep, there you go. Actually, here, I thought of a good stop that we can use we can say brainstorm a list there. That's going to be our new stop. Okay, and so you can see like I chose. I chose something that is going to that is going to appear in a specific place and that'll be my new stop. So plant trees change the way we produce energy, change the transportation system, change how we use energy. Okay, that's great. These are not the best examples because it's basically what it's copying is the amount of effort put into each one. So like if we were to go back and expand on each of these, and I'll show you in just a second what I mean, then it would do better. Alright, so we're building up to a few shot examples. So in the original GPT-3, what you'd have to do is in order to get very consistent output, you'd have to give it several examples in every single prompt, and that gets real old. Because you're basically training it very quickly to do what you want. So let's do brainstorm a list of ideas to let's see, what are we going to try and do? Let's see something completely off the wall build the fanciest gaming PC ever. And then we'll take out that. All right, we'll see what it does. Okay, that's not particularly fascinating. Get the best computer parts, get the best gaming monitor, get a great gaming mouse, get a gaming keyboard. Okay, great, whatever. None of these are particularly impressive, but the point here is to show you the difference between zero shot, one shot, and few shot prompting. Let me do a quick time check. All right, we're at 11 minutes. Let's cut it off there. This will be a whole series, but this is just showing you the basics of, think of it as an autocomplete engine, and there are three primary types of prompts. It's zero shot, one shot, and few shot. Once you build up an intuition for how these language models work, then you'll understand the value of the instruct series models and other ones that are aligned and how they're fine-tuned and why that fine-tuning makes them more useful in certain ways. All right, thanks for watching. Like and subscribe and consider supporting me on Patreon. Thanks and see you again soon. in certain ways.", "chunks": [{"timestamp": [0.0, 5.8], "text": " Hey everybody, David Shapiro here with another tutorial video."}, {"timestamp": [5.8, 10.96], "text": " So I know we've started with Python, and I'll show you something in a minute, but one thing"}, {"timestamp": [10.96, 16.36], "text": " that has come to my attention is that what we really need is some basics with prompt"}, {"timestamp": [16.36, 17.48], "text": " engineering."}, {"timestamp": [17.48, 25.76], "text": " So if you're new to GPT-3 and large language models, the first thing that you need to know"}, {"timestamp": [25.76, 29.4], "text": " is that these are fundamentally just autocomplete engines."}, {"timestamp": [29.4, 31.32], "text": " So you know how like you have your phone"}, {"timestamp": [31.32, 34.02], "text": " and it will have like the recommended next word."}, {"timestamp": [34.02, 35.26], "text": " It's not much different than that."}, {"timestamp": [35.26, 38.56], "text": " It's just, this is infinitely more sophisticated."}, {"timestamp": [38.56, 40.5], "text": " The model, I think, I always get this number wrong,"}, {"timestamp": [40.5, 43.8], "text": " but it takes about 700 gigabytes of RAM to run,"}, {"timestamp": [43.8, 45.6], "text": " whereas your keyboard takes, you know, a few"}, {"timestamp": [45.6, 51.28], "text": " megabytes. So this is like several thousand times larger of an autocomplete engine, but at the end"}, {"timestamp": [51.28, 56.16], "text": " of the day, it's just an autocomplete engine. So let me show you what I mean. This is the original"}, {"timestamp": [56.16, 62.12], "text": " DaVinci model, which is also one of the harder ones to use because it has no fine-tuning in order"}, {"timestamp": [62.12, 67.0], "text": " to make it more instruction friendly. And so in this case, you usually have to do..."}, {"timestamp": [67.0, 70.5], "text": " you either have to allow it to autocomplete what you've done,"}, {"timestamp": [70.5, 74.5], "text": " or you have to give it a few examples, which is called few-shot prompting."}, {"timestamp": [74.5, 76.0], "text": " So we're going to start with the old stuff,"}, {"timestamp": [76.0, 80.5], "text": " because if you build up an intuition for understanding that it's an autocomplete engine,"}, {"timestamp": [80.5, 83.5], "text": " and that's it, you'll understand how to use these models a lot better."}, {"timestamp": [83.5, 86.36], "text": " So we say BBC News China has"}, {"timestamp": [86.36, 89.32], "text": " tested their latest fusion reactor and then we just say go"}, {"timestamp": [89.32, 92.92], "text": " and see what it does. Oh interesting. So the last time I"}, {"timestamp": [92.92, 97.08], "text": " ran this, I did something else. It looks like in this case,"}, {"timestamp": [97.08, 100.04], "text": " it's listing a bunch of different news articles. So"}, {"timestamp": [100.04, 103.72], "text": " this if you go to like news.google.com, this is kind"}, {"timestamp": [103.72, 105.36], "text": " of what it looks like right where it's got"}, {"timestamp": [105.36, 111.6], "text": " you know the the source and then and then a title that's not what i expected it to do so let's run"}, {"timestamp": [111.6, 115.44], "text": " it again because this is just one way that it could auto complete it let's run it again and"}, {"timestamp": [115.44, 120.64], "text": " see what happens ah see now it's actually writing an article so you see how it seems at first bluff"}, {"timestamp": [120.64, 128.56], "text": " it might be completely random but what it's doing is it's matching a pattern. Let's see, so China has tested their latest fusion reactor"}, {"timestamp": [128.56, 131.0], "text": " and it seems to be successful this will be a huge step for the country in the"}, {"timestamp": [131.0, 137.28], "text": " world you know etc etc and it gives me a YouTube link let's see it let's see if"}, {"timestamp": [137.28, 143.36], "text": " this is actually a video. Nope, not available. Okay so anyways it's an"}, {"timestamp": [143.36, 146.16], "text": " autocomplete engine so this is what's called zero shot."}, {"timestamp": [146.16, 148.36], "text": " So zero shot is when you don't give it any examples,"}, {"timestamp": [148.36, 150.32], "text": " you just want it to complete something."}, {"timestamp": [151.48, 153.6], "text": " So this was for a news article."}, {"timestamp": [154.88, 156.32], "text": " Now, if I give it instructions,"}, {"timestamp": [156.32, 161.32], "text": " like write a short story about an astronaut going to Mars,"}, {"timestamp": [163.68, 170.4], "text": " this is probably not gonna work. See it's just it doesn't understand what I'm asking and"}, {"timestamp": [170.4, 177.28], "text": " it's just repeating it. Let's do it again. Yeah. so it's like"}, {"timestamp": [177.28, 179.52], "text": " giving instructions. It's like no. I actually wanted to write"}, {"timestamp": [179.52, 185.28], "text": " something like can you write the story for me. But if we reframe it like well, let's"}, {"timestamp": [185.28, 188.4], "text": " call it a."}, {"timestamp": [190.32, 198.82], "text": " Jordan's mission to Mars a short story by let's say Jimmy"}, {"timestamp": [198.82, 211.52], "text": " Hendrix. I don't know. There once was an astronaut named Jordan and then let's see what happens."}, {"timestamp": [213.04, 213.6], "text": " There we go."}, {"timestamp": [217.2, 228.4], "text": " So by giving it just a little bit to start off with, it kind of went... yeah, this looks like it was written by a little kid."}, {"timestamp": [228.4, 231.2], "text": " There was once an astronaut named Jordan. Jordan was a brave astronaut who was the"}, {"timestamp": [231.2, 235.18], "text": " first astronaut on Mars. He was the first astronaut to ever walk on Mars. Jordan"}, {"timestamp": [235.18, 239.2], "text": " was walking along the surface of Mars. He was walking on a sandy desert. The planet"}, {"timestamp": [239.2, 244.56], "text": " looked so red. Yeah, this was like written by a little kid. So that's the best it"}, {"timestamp": [244.56, 245.5], "text": " could do to match that pattern."}, {"timestamp": [245.5, 247.5], "text": " Now let's run it again and see what happens."}, {"timestamp": [247.5, 249.5], "text": " But you can see that it's just..."}, {"timestamp": [249.5, 252.0], "text": " Oh, this looks like a little more sophisticated."}, {"timestamp": [252.0, 254.5], "text": " But anyways, so by queuing it up,"}, {"timestamp": [254.5, 256.5], "text": " the end by Kayla Grady,"}, {"timestamp": [256.5, 258.5], "text": " and it's a short story by Jimi Hendrix,"}, {"timestamp": [258.5, 261.0], "text": " so it forgot what it was talking about anyways."}, {"timestamp": [261.0, 263.0], "text": " Alright, so this is zero shot,"}, {"timestamp": [263.0, 295.0], "text": " where you basically, you spool it up by giving it something, and then you just let it run like an autocomplete engine. And so in that respect, it's just a statistical model. But what if you have a very specific pattern that you want it to follow? So you might say like, brainstorm, let's see, a list of ideas to, let's see, a list of ideas of ways to survive on Mars."}, {"timestamp": [295.0, 305.04], "text": " So this is something that it's probably seen in its training data, like on Reddit or Stack Exchange or whatever and so then if we do this. What would"}, {"timestamp": [305.04, 307.68], "text": " you need to bring so it's not it's just asking questions."}, {"timestamp": [307.68, 310.48], "text": " It's not actually answering them. so that's no good right."}, {"timestamp": [310.48, 313.6], "text": " Let's do it again and see if we can get it to oh there we go."}, {"timestamp": [313.6, 323.68], "text": " Okay. Oh look and so then it starts it goes off Matt Damon."}, {"timestamp": [323.68, 327.16], "text": " Yeah. So then it completely changes topic and it's like, well, that's not what I wanted."}, {"timestamp": [327.16, 331.52], "text": " I wanted this list, right?"}, {"timestamp": [331.52, 333.86], "text": " Gather water from the water crystals, okay?"}, {"timestamp": [333.86, 336.08], "text": " Get oxygen from the oxygen crystals."}, {"timestamp": [336.08, 337.08], "text": " This is so random."}, {"timestamp": [337.08, 339.28], "text": " Find a way to grow food."}, {"timestamp": [339.28, 341.92], "text": " Find a way to build a radio so that, okay."}, {"timestamp": [341.92, 347.0], "text": " So you can see where it was just like, okay, it just kind of goes off the rails and runs with it."}, {"timestamp": [347.0, 351.0], "text": " This was original DaVinci. So how do you get it to do what you want?"}, {"timestamp": [351.0, 357.0], "text": " Well, so what you can do then is one shot, so what I've shown you up to this point is zero shot,"}, {"timestamp": [357.0, 362.0], "text": " where it's just like, let me just give you an initial prompt and treat you like an autocomplete engine,"}, {"timestamp": [362.0, 365.0], "text": " just like you hit the next thing on your keyboard"}, {"timestamp": [365.0, 367.0], "text": " and let it go and see what happens."}, {"timestamp": [367.0, 371.0], "text": " Now, what you can do then is what's called a one-shot prompt."}, {"timestamp": [371.0, 375.0], "text": " So a one-shot prompt is where you give it one example of what you want,"}, {"timestamp": [375.0, 378.0], "text": " and then you set it free."}, {"timestamp": [378.0, 380.0], "text": " So then I give it an example,"}, {"timestamp": [380.0, 383.0], "text": " brainstorm a list of ideas of how to survive on Mars."}, {"timestamp": [383.0, 388.48], "text": " So now let's brainstorm a list of ideas of how to survive on Mars. So now let's brainstorm a list of ideas of ways to survive on a"}, {"timestamp": [388.48, 394.96], "text": " deserted island. Okay. So in this case, it's called one shot"}, {"timestamp": [394.96, 399.2], "text": " because I give it one example of what I need and then because"}, {"timestamp": [399.2, 402.32], "text": " it's basically a pattern matching thing, it can keep"}, {"timestamp": [402.32, 407.06], "text": " going. So find food, find water, find find shelter find a way to communicate with the outside"}, {"timestamp": [407.06, 410.34], "text": " world. It basically gave me the same kind of of information"}, {"timestamp": [410.34, 414.34], "text": " here brainstorm list of ideas to serve on a deserted island"}, {"timestamp": [414.34, 417.78], "text": " and it repeated it. So you see these repetitions happening."}, {"timestamp": [417.78, 421.54], "text": " How do you get that to stop here? You can do backslash and"}, {"timestamp": [421.54, 427.04], "text": " backslash in so that's new line new line. So what will happen is if it gives you a double new line,"}, {"timestamp": [427.04, 427.92], "text": " it'll stop."}, {"timestamp": [427.92, 429.24], "text": " Whoops."}, {"timestamp": [429.24, 431.08], "text": " Gather food and water, find shelter."}, {"timestamp": [431.08, 432.2], "text": " Oh, wait, it didn't stop."}, {"timestamp": [432.2, 433.64], "text": " Why didn't it stop?"}, {"timestamp": [433.64, 439.12], "text": " I wonder if it's slash rn, slash rn."}, {"timestamp": [439.12, 442.52], "text": " So there's several ways that it can do new lines."}, {"timestamp": [442.52, 447.64], "text": " So slash r is carriage return, and slash n is new line."}, {"timestamp": [447.64, 450.56], "text": " Let's see if that works."}, {"timestamp": [450.56, 452.68], "text": " Nope, still not stopping."}, {"timestamp": [452.68, 455.28], "text": " What the actual heck?"}, {"timestamp": [455.28, 456.12], "text": " That's really weird."}, {"timestamp": [459.6, 462.28], "text": " Because the stop sequence should,"}, {"timestamp": [462.28, 465.4], "text": " unless it might be treating this like text."}, {"timestamp": [465.4, 467.0], "text": " Let me do view code."}, {"timestamp": [467.0, 471.6], "text": " Oh, yeah, so see what it did is it escaped my backslashes."}, {"timestamp": [471.6, 474.96], "text": " So while we're here, let me show you something super useful."}, {"timestamp": [474.96, 478.48], "text": " If you're trying to get, if you get a result that you like in here,"}, {"timestamp": [478.48, 481.36], "text": " with all the settings and stuff, you just click view code and it'll pop up and"}, {"timestamp": [481.36, 485.12], "text": " show you like, oh, look, here's what you did."}, {"timestamp": [485.12, 486.76], "text": " And so the stop sequence right here"}, {"timestamp": [486.76, 489.28], "text": " where you see it says backslash, backslash, N"}, {"timestamp": [489.28, 491.12], "text": " and backslash, backslash, N,"}, {"timestamp": [491.12, 492.4], "text": " that means it's escaping it."}, {"timestamp": [492.4, 495.0], "text": " So it's removing it as a regex."}, {"timestamp": [495.0, 496.92], "text": " So it's not evaluating it like regex."}, {"timestamp": [496.92, 498.52], "text": " I wanted to evaluate it like regex,"}, {"timestamp": [498.52, 499.82], "text": " but I'm not gonna do that."}, {"timestamp": [499.82, 501.76], "text": " So unfortunately that's not gonna work."}, {"timestamp": [503.08, 504.88], "text": " Brainstorm a list of ideas for a haunted house."}, {"timestamp": [504.88, 505.0], "text": " Now that's not going to work. Brainstorm a list of ideas for a haunted house."}, {"timestamp": [505.0, 507.0], "text": " Now, that's great."}, {"timestamp": [507.0, 513.0], "text": " Okay, so, if we stick with this, we say, alright, so we're brainstorming."}, {"timestamp": [513.0, 517.0], "text": " So, then if we do Fushot, where we give it a couple different examples."}, {"timestamp": [517.0, 522.0], "text": " So, let's go ahead and let it finish this."}, {"timestamp": [522.0, 524.0], "text": " Okay."}, {"timestamp": [524.0, 527.6], "text": " So, then we say, alright, let's take out"}, {"timestamp": [527.6, 530.32], "text": " survive and we're just saying this is brainstorming and you"}, {"timestamp": [530.32, 533.68], "text": " notice how it's doing four items for each. It's copying."}, {"timestamp": [533.68, 536.96], "text": " It's copying the pattern exactly. So now we're gonna"}, {"timestamp": [536.96, 539.68], "text": " give it two examples where it's it's brainstorming entirely"}, {"timestamp": [539.68, 542.56], "text": " different things. Brainstorm a list of ideas of ways to"}, {"timestamp": [542.56, 546.48], "text": " survive on Mars. Brainstorm a list of ideas of ways to survive on Mars. Brainstorm a list of ideas for a haunted house. Let's"}, {"timestamp": [546.48, 553.12], "text": " see brainstorm a list of ideas to solve climate change so"}, {"timestamp": [553.12, 557.12], "text": " completely different domains. But I shouldn't even need to"}, {"timestamp": [557.12, 559.68], "text": " put in the the one because it will it will have seen this"}, {"timestamp": [559.68, 563.2], "text": " pattern. So remember it's auto complete. It's an auto complete"}, {"timestamp": [563.2, 567.0], "text": " engine, but it's also a pattern matching and pattern generation engine."}, {"timestamp": [567.0, 569.0], "text": " So that's how autocomplete works."}, {"timestamp": [569.0, 571.0], "text": " It says, oh, I've seen this pattern before."}, {"timestamp": [571.0, 573.0], "text": " Like, if you start it with a BBC News article,"}, {"timestamp": [573.0, 575.0], "text": " it says, I've seen plenty of BBC articles."}, {"timestamp": [575.0, 577.0], "text": " Why? Because GPT-3 was chained on, you know,"}, {"timestamp": [577.0, 580.0], "text": " hundreds of gigabytes of internet data."}, {"timestamp": [580.0, 582.0], "text": " Okay. Plant trees, change the way."}, {"timestamp": [582.0, 584.0], "text": " Yep, there you go."}, {"timestamp": [584.0, 587.36], "text": " Actually, here, I thought of a good stop that we can use we"}, {"timestamp": [587.36, 592.24], "text": " can say brainstorm a list there. That's going to be our"}, {"timestamp": [592.24, 598.64], "text": " new stop. Okay, and so you can see like I chose. I chose"}, {"timestamp": [598.64, 601.44], "text": " something that is going to that is going to appear in a"}, {"timestamp": [601.44, 606.36], "text": " specific place and that'll be my new stop. So plant trees change the way we produce energy,"}, {"timestamp": [606.36, 608.24], "text": " change the transportation system,"}, {"timestamp": [608.24, 610.12], "text": " change how we use energy."}, {"timestamp": [610.12, 611.52], "text": " Okay, that's great."}, {"timestamp": [611.52, 614.44], "text": " These are not the best examples"}, {"timestamp": [614.44, 616.14], "text": " because it's basically what it's copying"}, {"timestamp": [616.14, 618.2], "text": " is the amount of effort put into each one."}, {"timestamp": [618.2, 620.56], "text": " So like if we were to go back and expand on each of these,"}, {"timestamp": [620.56, 623.32], "text": " and I'll show you in just a second what I mean,"}, {"timestamp": [623.32, 625.36], "text": " then it would do better."}, {"timestamp": [625.36, 628.6], "text": " Alright, so we're building up to a few shot examples."}, {"timestamp": [628.6, 635.56], "text": " So in the original GPT-3, what you'd have to do is in order to get very consistent output,"}, {"timestamp": [635.56, 643.08], "text": " you'd have to give it several examples in every single prompt, and that gets real old."}, {"timestamp": [643.08, 646.0], "text": " Because you're basically training it very quickly to do"}, {"timestamp": [646.0, 648.0], "text": " what you want. So let's do"}, {"timestamp": [648.0, 650.0], "text": " brainstorm a list of"}, {"timestamp": [650.0, 652.0], "text": " ideas to"}, {"timestamp": [652.0, 654.0], "text": " let's see, what are we going to try and do?"}, {"timestamp": [654.0, 656.0], "text": " Let's see"}, {"timestamp": [656.0, 658.0], "text": " something completely off the wall"}, {"timestamp": [658.0, 665.0], "text": " build the fanciest gaming PC ever."}, {"timestamp": [667.32, 669.12], "text": " And then we'll take out that."}, {"timestamp": [669.12, 670.82], "text": " All right, we'll see what it does."}, {"timestamp": [671.9, 674.88], "text": " Okay, that's not particularly fascinating."}, {"timestamp": [674.88, 677.06], "text": " Get the best computer parts, get the best gaming monitor,"}, {"timestamp": [677.06, 680.06], "text": " get a great gaming mouse, get a gaming keyboard."}, {"timestamp": [680.06, 681.48], "text": " Okay, great, whatever."}, {"timestamp": [682.92, 684.68], "text": " None of these are particularly impressive,"}, {"timestamp": [684.68, 686.44], "text": " but the point here is to show you the difference"}, {"timestamp": [686.44, 689.48], "text": " between zero shot, one shot, and few shot prompting."}, {"timestamp": [689.48, 690.9], "text": " Let me do a quick time check."}, {"timestamp": [690.9, 692.12], "text": " All right, we're at 11 minutes."}, {"timestamp": [692.12, 693.72], "text": " Let's cut it off there."}, {"timestamp": [693.72, 694.76], "text": " This will be a whole series,"}, {"timestamp": [694.76, 697.88], "text": " but this is just showing you the basics of,"}, {"timestamp": [697.88, 699.8], "text": " think of it as an autocomplete engine,"}, {"timestamp": [699.8, 702.04], "text": " and there are three primary types of prompts."}, {"timestamp": [702.04, 704.52], "text": " It's zero shot, one shot, and few shot."}, {"timestamp": [704.52, 705.12], "text": " Once you build up"}, {"timestamp": [705.12, 712.56], "text": " an intuition for how these language models work, then you'll understand the value of the instruct"}, {"timestamp": [712.56, 718.8], "text": " series models and other ones that are aligned and how they're fine-tuned and why that fine-tuning"}, {"timestamp": [718.8, 723.6], "text": " makes them more useful in certain ways. All right, thanks for watching. Like and subscribe"}, {"timestamp": [723.6, 727.68], "text": " and consider supporting me on Patreon. Thanks and see you again soon."}, {"timestamp": [722.92, 729.92], "text": " in certain ways."}]}